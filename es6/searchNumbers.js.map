{"version":3,"sources":["../source/searchNumbers.js"],"names":["normalizeArguments","PhoneNumberMatcher","searchNumbers","arguments","text","options","metadata","matcher","Symbol","iterator","next","hasNext","done","value"],"mappings":";;AAAA,SAASA,kBAAT,QAAmC,oBAAnC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA;;;AAGA,eAAe,SAASC,aAAT,GACf;AAAA,2BACqCF,mBAAmBG,SAAnB,CADrC;AAAA,KACSC,IADT,uBACSA,IADT;AAAA,KACeC,OADf,uBACeA,OADf;AAAA,KACwBC,QADxB,uBACwBA,QADxB;;AAGC,KAAMC,UAAU,IAAIN,kBAAJ,CAAuBG,IAAvB,EAA6BC,OAA7B,EAAsCC,QAAtC,CAAhB;;AAEA,4BACEE,OAAOC,QADT,cACqB;AACnB,SAAO;AACHC,SAAM,gBAAM;AACX,QAAIH,QAAQI,OAAR,EAAJ,EAAuB;AACzB,YAAO;AACNC,YAAM,KADA;AAENC,aAAON,QAAQG,IAAR;AAFD,MAAP;AAIA;AACD,WAAO;AACNE,WAAM;AADA,KAAP;AAGG;AAXE,GAAP;AAaA,EAfF;AAiBA","file":"searchNumbers.js","sourcesContent":["import { normalizeArguments } from './parsePhoneNumber'\nimport PhoneNumberMatcher from './PhoneNumberMatcher'\n\n/**\n * @return ES6 `for ... of` iterator.\n */\nexport default function searchNumbers()\n{\n\tconst { text, options, metadata } = normalizeArguments(arguments)\n\n\tconst matcher = new PhoneNumberMatcher(text, options, metadata)\n\n\treturn  {\n\t\t[Symbol.iterator]() {\n\t\t\treturn {\n\t    \t\tnext: () => {\n\t    \t\t\tif (matcher.hasNext()) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\t\tvalue: matcher.next()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: true\n\t\t\t\t\t}\n\t    \t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"]}