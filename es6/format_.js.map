{"version":3,"sources":["../source/format_.js"],"names":["VALID_PUNCTUATION","matchesEntirely","Metadata","getIDDPrefix","formatRFC3966","defaultOptions","formatExtension","formattedNumber","extension","metadata","ext","formatNumber","input","format","options","country","hasCountry","Error","countryCallingCode","chooseCountryByCountryCallingCode","phone","nationalNumber","v2","number","format_national_number","addExtension","fromCountry","IDDPrefix","humanReadable","formattedForSameCountryCallingCode","formatIDDSameCountryCallingCodeNumber","FIRST_GROUP_PATTERN","format_national_number_using_format","useInternationalFormat","includeNationalPrefixForNationalFormat","replace","RegExp","pattern","internationalFormat","nationalPrefixFormattingRule","nationalPrefixIsOptionalWhenFormatting","changeInternationalFormatStyle","format_as","choose_format_for_number","formats","available_formats","national_number","leadingDigitsPatterns","length","last_leading_digits_pattern","search","local","trim","toCountryCallingCode","toCountryMetadata","fromCountryMetadata"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA,SAASA,iBAAT,QAAkC,aAAlC;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,SAASC,aAAT,QAA8B,WAA9B;;AAEA,IAAMC,iBACN;AACCC,kBAAiB,yBAACC,eAAD,EAAkBC,SAAlB,EAA6BC,QAA7B;AAAA,cAA6CF,eAA7C,GAA+DE,SAASC,GAAT,EAA/D,GAAgFF,SAAhF;AAAA;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA,CADA,CAkBA,eAAe,SAASG,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8CL,QAA9C,EACf;AACC;AACA,KAAIK,OAAJ,EAAa;AACZA,yBAAeT,cAAf,EAAkCS,OAAlC;AACA,EAFD,MAEO;AACNA,YAAUT,cAAV;AACA;;AAEDI,YAAW,IAAIP,QAAJ,CAAaO,QAAb,CAAX;;AAEA,KAAIG,MAAMG,OAAV,EACA;AACC;AACA,MAAI,CAACN,SAASO,UAAT,CAAoBJ,MAAMG,OAA1B,CAAL,EAAyC;AACxC,SAAM,IAAIE,KAAJ,uBAA8BL,MAAMG,OAApC,CAAN;AACA;AACDN,WAASM,OAAT,CAAiBH,MAAMG,OAAvB;AACA,EAPD,MAQK,IAAIH,MAAMM,kBAAV,EACL;AACCT,WAASU,iCAAT,CAA2CP,MAAMM,kBAAjD;AACA,EAHI,MAIA,OAAON,MAAMQ,KAAN,IAAe,EAAtB;;AAEL,KAAMF,qBAAqBT,SAASS,kBAAT,EAA3B;;AAEA,KAAMG,iBAAiBP,QAAQQ,EAAR,GAAaV,MAAMS,cAAnB,GAAoCT,MAAMQ,KAAjE;;AAEA;AACA;AACA,KAAIG,eAAJ;;AAEA,SAAQV,MAAR;AAEC,OAAK,UAAL;AACC;AACA;AACA,OAAI,CAACQ,cAAL,EAAqB;AACpB,WAAO,EAAP;AACA;AACDE,YAASC,uBAAuBH,cAAvB,EAAuC,UAAvC,EAAmDZ,QAAnD,CAAT;AACA,UAAOgB,aAAaF,MAAb,EAAqBX,MAAMF,GAA3B,EAAgCD,QAAhC,EAA0CK,QAAQR,eAAlD,CAAP;;AAED,OAAK,eAAL;AACC;AACA;AACA,OAAI,CAACe,cAAL,EAAqB;AACpB,iBAAWH,kBAAX;AACA;AACDK,YAASC,uBAAuBH,cAAvB,EAAuC,eAAvC,EAAwDZ,QAAxD,CAAT;AACAc,kBAAaL,kBAAb,SAAmCK,MAAnC;AACA,UAAOE,aAAaF,MAAb,EAAqBX,MAAMF,GAA3B,EAAgCD,QAAhC,EAA0CK,QAAQR,eAAlD,CAAP;;AAED,OAAK,OAAL;AACC;AACA,gBAAWY,kBAAX,GAAgCG,cAAhC;;AAED,OAAK,SAAL;AACC,UAAOjB,cACN;AACAmB,kBAAaL,kBAAb,GAAkCG,cADlC;AAEAX,SAASE,MAAMF;AAFf,IADM,CAAP;;AAMD,OAAK,KAAL;AACC,OAAI,CAACI,QAAQY,WAAb,EAA0B;AACzB;AACA;AACA;AACD,OAAMC,YAAYxB,aAAaW,QAAQY,WAArB,EAAkCjB,SAASA,QAA3C,CAAlB;AACA,OAAI,CAACkB,SAAL,EAAgB;AACf;AACA;AACD,OAAIb,QAAQc,aAAZ,EACA;AACC,QAAMC,qCAAqCX,sBAAsBY,sCAAsCT,cAAtC,EAAsDZ,SAASS,kBAAT,EAAtD,EAAqFJ,QAAQY,WAA7F,EAA0GjB,QAA1G,CAAjE;AACA,QAAIoB,kCAAJ,EAAwC;AACvCN,cAASM,kCAAT;AACA,KAFD,MAEO;AACNN,cAAYI,SAAZ,SAAyBT,kBAAzB,SAA+CM,uBAAuBH,cAAvB,EAAuC,eAAvC,EAAwDZ,QAAxD,CAA/C;AACA;AACD,WAAOgB,aAAaF,MAAb,EAAqBX,MAAMF,GAA3B,EAAgCD,QAAhC,EAA0CK,QAAQR,eAAlD,CAAP;AACA;AACD,eAAUqB,SAAV,GAAsBT,kBAAtB,GAA2CG,cAA3C;;AAED;AACC,SAAM,IAAIJ,KAAJ,6DAAoEJ,MAApE,OAAN;AAtDF;AAwDA;;AAED;AACA;AACA;AACA;AACA,OAAO,IAAMkB,sBAAsB,QAA5B;;AAEP,OAAO,SAASC,mCAAT,CAA6CT,MAA7C,EAAqDV,MAArD,EAA6DoB,sBAA7D,EAAqFC,sCAArF,EAA6HzB,QAA7H,EACP;AACC,KAAMF,kBAAkBgB,OAAOY,OAAP,CACvB,IAAIC,MAAJ,CAAWvB,OAAOwB,OAAP,EAAX,CADuB,EAEvBJ,yBACCpB,OAAOyB,mBAAP,EADD,GAECzB,OAAO0B,4BAAP,OAA0C,CAAC1B,OAAO2B,sCAAP,EAAD,IAAoDN,sCAA9F,IACCrB,OAAOA,MAAP,GAAgBsB,OAAhB,CAAwBJ,mBAAxB,EAA6ClB,OAAO0B,4BAAP,EAA7C,CADD,GAEC1B,OAAOA,MAAP,EANqB,CAAxB;;AASA,KAAIoB,sBAAJ,EAA4B;AAC3B,SAAOQ,+BAA+BlC,eAA/B,CAAP;AACA;;AAED,QAAOA,eAAP;AACA;;AAED,SAASiB,sBAAT,CAAgCD,MAAhC,EAAwCmB,SAAxC,EAAmDjC,QAAnD,EACA;AACC,KAAMI,SAAS8B,yBAAyBlC,SAASmC,OAAT,EAAzB,EAA6CrB,MAA7C,CAAf;AACA,KAAI,CAACV,MAAL,EAAa;AACZ,SAAOU,MAAP;AACA;AACD,QAAOS,oCAAoCT,MAApC,EAA4CV,MAA5C,EAAoD6B,cAAc,eAAlE,EAAmF,IAAnF,EAAyFjC,QAAzF,CAAP;AACA;;AAED,OAAO,SAASkC,wBAAT,CAAkCE,iBAAlC,EAAqDC,eAArD,EACP;AACC,sBAAqBD,iBAArB,kHACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,MADWhC,MACX;;AACC;AACA,MAAIA,OAAOkC,qBAAP,GAA+BC,MAA/B,GAAwC,CAA5C,EACA;AACC;AACA,OAAMC,8BAA8BpC,OAAOkC,qBAAP,GAA+BlC,OAAOkC,qBAAP,GAA+BC,MAA/B,GAAwC,CAAvE,CAApC;;AAEA;AACA,OAAIF,gBAAgBI,MAAhB,CAAuBD,2BAAvB,MAAwD,CAA5D,EACA;AACC;AACA;AACD;;AAED;AACA,MAAIhD,gBAAgB6C,eAAhB,EAAiCjC,OAAOwB,OAAP,EAAjC,CAAJ,EACA;AACC,UAAOxB,MAAP;AACA;AACD;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS4B,8BAAT,CAAwCU,KAAxC,EACP;AACC,QAAOA,MAAMhB,OAAN,CAAc,IAAIC,MAAJ,OAAepC,iBAAf,SAAsC,GAAtC,CAAd,EAA0D,GAA1D,EAA+DoD,IAA/D,EAAP;AACA;;AAED,SAAS3B,YAAT,CAAsBlB,eAAtB,EAAuCG,GAAvC,EAA4CD,QAA5C,EAAsDH,eAAtD,EACA;AACC,QAAOI,MAAMJ,gBAAgBC,eAAhB,EAAiCG,GAAjC,EAAsCD,QAAtC,CAAN,GAAwDF,eAA/D;AACA;;AAED,OAAO,SAASuB,qCAAT,CAA+CP,MAA/C,EAAuD8B,oBAAvD,EAA6E3B,WAA7E,EAA0F4B,iBAA1F,EACP;AACC,KAAMC,sBAAsB,IAAIrD,QAAJ,CAAaoD,kBAAkB7C,QAA/B,CAA5B;AACA8C,qBAAoBxC,OAApB,CAA4BW,WAA5B;;AAEA;AACA,KAAI2B,yBAAyBE,oBAAoBrC,kBAApB,EAA7B,EACA;AACC;AACA;AACA,MAAImC,yBAAyB,GAA7B,EACA;AACC,UAAOA,uBAAuB,GAAvB,GAA6B7B,uBAAuBD,MAAvB,EAA+B,UAA/B,EAA2C+B,iBAA3C,CAApC;AACA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO9B,uBAAuBD,MAAvB,EAA+B,UAA/B,EAA2C+B,iBAA3C,CAAP;AACA;AACD","file":"format_.js","sourcesContent":["// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of December 31th, 2018.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\n\nimport { VALID_PUNCTUATION } from './constants'\nimport { matchesEntirely } from './util'\nimport Metadata from './metadata'\nimport { getIDDPrefix } from './IDD'\nimport { formatRFC3966 } from './RFC3966'\n\nconst defaultOptions =\n{\n\tformatExtension: (formattedNumber, extension, metadata) => `${formattedNumber}${metadata.ext()}${extension}`\n}\n\n// Formats a phone number\n//\n// Example use cases:\n//\n// ```js\n// formatNumber('8005553535', 'RU', 'INTERNATIONAL')\n// formatNumber('8005553535', 'RU', 'INTERNATIONAL', metadata)\n// formatNumber({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL')\n// formatNumber({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', metadata)\n// formatNumber('+78005553535', 'NATIONAL')\n// formatNumber('+78005553535', 'NATIONAL', metadata)\n// ```\n//\nexport default function formatNumber(input, format, options, metadata)\n{\n\t// Apply default options.\n\tif (options) {\n\t\toptions = { ...defaultOptions, ...options }\n\t} else {\n\t\toptions = defaultOptions\n\t}\n\n\tmetadata = new Metadata(metadata)\n\n\tif (input.country)\n\t{\n\t\t// Validate `input.country`.\n\t\tif (!metadata.hasCountry(input.country)) {\n\t\t\tthrow new Error(`Unknown country: ${input.country}`)\n\t\t}\n\t\tmetadata.country(input.country)\n\t}\n\telse if (input.countryCallingCode)\n\t{\n\t\tmetadata.chooseCountryByCountryCallingCode(input.countryCallingCode)\n\t}\n\telse return input.phone || ''\n\n\tconst countryCallingCode = metadata.countryCallingCode()\n\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\n\n\t// This variable should have been declared inside `case`s\n\t// but Babel has a bug and it says \"duplicate variable declaration\".\n\tlet number\n\n\tswitch (format)\n\t{\n\t\tcase 'NATIONAL':\n\t\t\t// Legacy argument support.\n\t\t\t// (`{ country: ..., phone: '' }`)\n\t\t\tif (!nationalNumber) {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t\tnumber = format_national_number(nationalNumber, 'NATIONAL', metadata)\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\n\n\t\tcase 'INTERNATIONAL':\n\t\t\t// Legacy argument support.\n\t\t\t// (`{ country: ..., phone: '' }`)\n\t\t\tif (!nationalNumber) {\n\t\t\t\treturn `+${countryCallingCode}`\n\t\t\t}\n\t\t\tnumber = format_national_number(nationalNumber, 'INTERNATIONAL', metadata)\n\t\t\tnumber = `+${countryCallingCode} ${number}`\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\n\n\t\tcase 'E.164':\n\t\t\t// `E.164` doesn't define \"phone number extensions\".\n\t\t\treturn `+${countryCallingCode}${nationalNumber}`\n\n\t\tcase 'RFC3966':\n\t\t\treturn formatRFC3966\n\t\t\t({\n\t\t\t\tnumber : `+${countryCallingCode}${nationalNumber}`,\n\t\t\t\text    : input.ext\n\t\t\t})\n\n\t\tcase 'IDD':\n\t\t\tif (!options.fromCountry) {\n\t\t\t\treturn\n\t\t\t\t// throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\n\t\t\t}\n\t\t\tconst IDDPrefix = getIDDPrefix(options.fromCountry, metadata.metadata)\n\t\t\tif (!IDDPrefix) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (options.humanReadable)\n\t\t\t{\n\t\t\t\tconst formattedForSameCountryCallingCode = countryCallingCode && formatIDDSameCountryCallingCodeNumber(nationalNumber, metadata.countryCallingCode(), options.fromCountry, metadata)\n\t\t\t\tif (formattedForSameCountryCallingCode) {\n\t\t\t\t\tnumber = formattedForSameCountryCallingCode\n\t\t\t\t} else {\n\t\t\t\t\tnumber = `${IDDPrefix} ${countryCallingCode} ${format_national_number(nationalNumber, 'INTERNATIONAL', metadata)}`\n\t\t\t\t}\n\t\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\n\t\t\t}\n\t\t\treturn `${IDDPrefix}${countryCallingCode}${nationalNumber}`\n\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown \"format\" argument passed to \"formatNumber()\": \"${format}\"`)\n\t}\n}\n\n// This was originally set to $1 but there are some countries for which the\n// first group is not used in the national pattern (e.g. Argentina) so the $1\n// group does not match correctly.  Therefore, we use \\d, so that the first\n// group actually used in the pattern will be matched.\nexport const FIRST_GROUP_PATTERN = /(\\$\\d)/\n\nexport function format_national_number_using_format(number, format, useInternationalFormat, includeNationalPrefixForNationalFormat, metadata)\n{\n\tconst formattedNumber = number.replace(\n\t\tnew RegExp(format.pattern()),\n\t\tuseInternationalFormat ?\n\t\t\tformat.internationalFormat() :\n\t\t\tformat.nationalPrefixFormattingRule() && (!format.nationalPrefixIsOptionalWhenFormatting() || includeNationalPrefixForNationalFormat) ?\n\t\t\t\tformat.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule()) :\n\t\t\t\tformat.format()\n\t)\n\n\tif (useInternationalFormat) {\n\t\treturn changeInternationalFormatStyle(formattedNumber)\n\t}\n\n\treturn formattedNumber\n}\n\nfunction format_national_number(number, format_as, metadata)\n{\n\tconst format = choose_format_for_number(metadata.formats(), number)\n\tif (!format) {\n\t\treturn number\n\t}\n\treturn format_national_number_using_format(number, format, format_as === 'INTERNATIONAL', true, metadata)\n}\n\nexport function choose_format_for_number(available_formats, national_number)\n{\n\tfor (const format of available_formats)\n\t{\n\t\t// Validate leading digits\n\t\tif (format.leadingDigitsPatterns().length > 0)\n\t\t{\n\t\t\t// The last leading_digits_pattern is used here, as it is the most detailed\n\t\t\tconst last_leading_digits_pattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1]\n\n\t\t\t// If leading digits don't match then move on to the next phone number format\n\t\t\tif (national_number.search(last_leading_digits_pattern) !== 0)\n\t\t\t{\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\n\t\t// Check that the national number matches the phone number format regular expression\n\t\tif (matchesEntirely(national_number, format.pattern()))\n\t\t{\n\t\t\treturn format\n\t\t}\n\t}\n}\n\n// Removes brackets and replaces dashes with spaces.\n//\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\n//\n// For some reason Google's metadata contains `<intlFormat/>`s with brackets and dashes.\n// Meanwhile, there's no single opinion about using punctuation in international phone numbers.\n//\n// For example, Google's `<intlFormat/>` for USA is `+1 213-373-4253`.\n// And here's a quote from WikiPedia's \"North American Numbering Plan\" page:\n// https://en.wikipedia.org/wiki/North_American_Numbering_Plan\n//\n// \"The country calling code for all countries participating in the NANP is 1.\n// In international format, an NANP number should be listed as +1 301 555 01 00,\n// where 301 is an area code (Maryland).\"\n//\n// I personally prefer the international format without any punctuation.\n// For example, brackets are remnants of the old age, meaning that the\n// phone number part in brackets (so called \"area code\") can be omitted\n// if dialing within the same \"area\".\n// And hyphens were clearly introduced for splitting local numbers into memorizable groups.\n// For example, remembering \"5553535\" is difficult but \"555-35-35\" is much simpler.\n// Imagine a man taking a bus from home to work and seeing an ad with a phone number.\n// He has a couple of seconds to memorize that number until it passes by.\n// If it were spaces instead of hyphens the man wouldn't necessarily get it,\n// but with hyphens instead of spaces the grouping is more explicit.\n// I personally think that hyphens introduce visual clutter,\n// so I prefer replacing them with spaces in international numbers.\n// In the modern age all output is done on displays where spaces are clearly distinguishable\n// so hyphens can be safely replaced with spaces without losing any legibility.\n//\nexport function changeInternationalFormatStyle(local)\n{\n\treturn local.replace(new RegExp(`[${VALID_PUNCTUATION}]+`, 'g'), ' ').trim()\n}\n\nfunction addExtension(formattedNumber, ext, metadata, formatExtension)\n{\n\treturn ext ? formatExtension(formattedNumber, ext, metadata) : formattedNumber\n}\n\nexport function formatIDDSameCountryCallingCodeNumber(number, toCountryCallingCode, fromCountry, toCountryMetadata)\n{\n\tconst fromCountryMetadata = new Metadata(toCountryMetadata.metadata)\n\tfromCountryMetadata.country(fromCountry)\n\n\t// If calling within the same country calling code.\n\tif (toCountryCallingCode === fromCountryMetadata.countryCallingCode())\n\t{\n\t\t// For NANPA regions, return the national format for these regions\n\t\t// but prefix it with the country calling code.\n\t\tif (toCountryCallingCode === '1')\n\t\t{\n\t\t\treturn toCountryCallingCode + ' ' + format_national_number(number, 'NATIONAL', toCountryMetadata)\n\t\t}\n\n\t\t// If regions share a country calling code, the country calling code need\n\t\t// not be dialled. This also applies when dialling within a region, so this\n\t\t// if clause covers both these cases. Technically this is the case for\n\t\t// dialling from La Reunion to other overseas departments of France (French\n\t\t// Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\n\t\t// this edge case for now and for those cases return the version including\n\t\t// country calling code. Details here:\n\t\t// http://www.petitfute.com/voyage/225-info-pratiques-reunion\n\t\t//\n\t\treturn format_national_number(number, 'NATIONAL', toCountryMetadata)\n\t}\n}"]}