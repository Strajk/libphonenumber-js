{"version":3,"sources":["../source/parsePhoneNumberFromString_.js"],"names":["parsePhoneNumberFromString","text","options","metadata","defaultCountry","undefined","error","ParseError"],"mappings":";;;;;;;;kBAIwBA,0B;;AAJxB;;;;AACA;;;;AACA;;;;AAEe,SAASA,0BAAT,CAAoCC,IAApC,EAA0CC,OAA1C,EAAmDC,QAAnD,EAA6D;AAC3E;AACA,KAAID,WAAWA,QAAQE,cAAnB,IAAqC,CAAC,kCAAmBF,QAAQE,cAA3B,EAA2CD,QAA3C,CAA1C,EAAgG;AAC/FD,yBACIA,OADJ;AAECE,mBAAgBC;AAFjB;AAIA;AACD;AACA,KAAI;AACH,SAAO,iCAAiBJ,IAAjB,EAAuBC,OAAvB,EAAgCC,QAAhC,CAAP;AACA,EAFD,CAEE,OAAOG,KAAP,EAAc;AACf;AACA,MAAIA,iBAAiBC,oBAArB,EAAiC;AAChC;AACA,GAFD,MAEO;AACN,SAAMD,KAAN;AACA;AACD;AACD","file":"parsePhoneNumberFromString_.js","sourcesContent":["import parsePhoneNumber from './parsePhoneNumber_'\nimport ParseError from './ParseError'\nimport { isSupportedCountry } from './metadata'\n\nexport default function parsePhoneNumberFromString(text, options, metadata) {\n\t// Validate `defaultCountry`.\n\tif (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\n\t\toptions = {\n\t\t\t...options,\n\t\t\tdefaultCountry: undefined\n\t\t}\n\t}\n\t// Parse phone number.\n\ttry {\n\t\treturn parsePhoneNumber(text, options, metadata)\n\t} catch (error) {\n\t\t/* istanbul ignore else */\n\t\tif (error instanceof ParseError) {\n\t\t\t//\n\t\t} else {\n\t\t\tthrow error\n\t\t}\n\t}\n}\n"]}