{"version":3,"sources":["../source/isValidNumberForRegion.js"],"names":["isValidNumberForRegion","number","country","metadata","TypeError","input","defaultCountry","undefined"],"mappings":";;;;;kBAIwBA,sB;;AAJxB;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,sBAAT,CAAgCC,MAAhC,EAAwCC,OAAxC,EAAiDC,QAAjD,EACf;AACC,KAAI,OAAOF,MAAP,KAAkB,QAAtB,EACA;AACC,QAAM,IAAIG,SAAJ,CAAc,yBAAd,CAAN;AACA;;AAED,KAAI,OAAOF,OAAP,KAAmB,QAAvB,EACA;AACC,QAAM,IAAIE,SAAJ,CAAc,0BAAd,CAAN;AACA;;AAED;AACA;AACA;AACA;AACA;AACA,KAAIC,cAAJ;AACA,KAAI,mCAAoBJ,MAApB,CAAJ,EAAiC;AAChCI,UAAQ,sBAAYJ,MAAZ,EAAoB,EAAEK,gBAAgBJ,OAAlB,EAApB,EAAiDC,QAAjD,CAAR;AACA,EAFD,MAEO;AACNE,UAAQ,EAAR;AACA;;AAED,QAAO,uCAAwBA,KAAxB,EAA+BH,OAA/B,EAAwCK,SAAxC,EAAmDJ,QAAnD,CAAP;AACA","file":"isValidNumberForRegion.js","sourcesContent":["import isViablePhoneNumber from './isViablePhoneNumber'\nimport parseNumber from './parse_'\nimport _isValidNumberForRegion from './isValidNumberForRegion_'\n\nexport default function isValidNumberForRegion(number, country, metadata)\n{\n\tif (typeof number !== 'string')\n\t{\n\t\tthrow new TypeError('number must be a string')\n\t}\n\n\tif (typeof country !== 'string')\n\t{\n\t\tthrow new TypeError('country must be a string')\n\t}\n\n\t// `parse` extracts phone numbers from raw text,\n\t// therefore it will cut off all \"garbage\" characters,\n\t// while this `validate` function needs to verify\n\t// that the phone number contains no \"garbage\"\n\t// therefore the explicit `isViablePhoneNumber` check.\n\tlet input\n\tif (isViablePhoneNumber(number)) {\n\t\tinput = parseNumber(number, { defaultCountry: country }, metadata)\n\t} else {\n\t\tinput = {}\n\t}\n\n\treturn _isValidNumberForRegion(input, country, undefined, metadata)\n}"]}